students2
res<-gather(students2, sex_class, count, -grade)
res
?separate
separate(data=res, col=sex_class, into=c('sex', 'class'))
submit()
submit()
submit()
submit()
submit()
students2 %>%
gather(students2, sex_class ,count,-grade )
students2 %>% gather(students2, sex_class ,count,-grade )
students2
res<-gather(students2, sex_class, count, -grade)
res
students2 %>%
gather(students2, sex_class ,count,-grade )
students2 %>%
gather(students2, sex_class ,count,-grade )
students2 %>%
gather(sex_class ,count,-grade )
submit()
res
res %>%  separate( col=sex_class, into=c('sex', 'class'))%>%
res %>%  separate( col=sex_class, into=c('sex', 'class'))
submit()
students3
submit()
?spread
df <- data.frame(x = c("a", "b"), y = c(3, 4), z = c(5, 6))
df
df %>% spread(x, y)
submit()
submit()
submit()
reset()
submit()
submit()
extract_numeric("class5")
?mutate
submit()
students4
submit()
submit()
submit()
submit()
?select
submit()
passed
failed
?mutate
mutate(passed, status='passed')
passed <- passed %>% mutate(status = "passed")
failed <- failed %>% mutate(status = "failed")
?bindrows
?bind_rows
bind_rows(passed, failed)
sat
?select
sat %>%
select(-contains('total')) %>%
gather(part_sex, count, -score_range)
?separate
submit()
submit()
submit()
submit()
qu()
quit()
library(datasets)
swiss
?data()
data(swiss)
swiss
pairs(swiss,panel=panel.smooth)
summary(lm(Fertility ~ . ))
summary(lm(Fertility ~ . , data=swiss))
library(datasets)
data<- InsectSprays
InsectSprays
test<-lm(count~spray, data=InsectSpray)
test<-lm(count~spray, data=InsectSprays)
summary(test)
summary(test)$coefficient
summary(test)
mtcars
head(mtcars)
fit<-lm(mpg~ am, data=mtcars )
summary(fit)
fitall<-lm(mpg~ ., data=mtcars )
summary(fiatall)
summary(fitall)
?mtcars
library(ddplyr)
library(dplyr)
?dplyr
plotdata<-mtcars %>% group_by(am)
plotdata
plotdata<-mtcars %>% group_by(am) %>% boxplot(mpg~am)
plotdata<-mtcars %>% select(mpg, am)%>% group_by(am) %>% boxplot(mpg~am)
?boxplot
plotdata<-mtcars %>% select(mpg, am)%>% group_by(am) %>% boxplot(mpg~am)
plotdata<-mtcars %>% select(mpg, am)%>% group_by(am) %>% barplot(mpg~am)
plotdata<-mtcars %>% select(mpg, am)%>% group_by(am) %>% barplot(mpg~am)
?barplot
?boxplot
plotdata<-mtcars %>% select(mpg, am)%>% group_by(am) %>% boxplot(mpg)
plotdata<-mtcars %>% select(mpg, am)%>% group_by(am)
boxplot(mpg~am, data=plotdata)
?axis
cor(am, hp)
cor(am, hp, data=mtcars#)
cor(am, hp, data=mtcars)
?cor
cor(mtcars)
using the step function
Null<-lm(data~1,mtcars)
Null<-lm(mpg~1,mtcars)
Full<-lm(mpg~.,mtcars)
null<-lm(mpg~1,mtcars)
full<-lm(mpg~.,mtcars)
test<-step(null, scope=list(lower=null, upper=full), direction="forward")
null<-lm(mpg~1,mtcars)
full<-lm(mpg~.,mtcars)
test<-step(null, scope=list(lower=null, upper=full), direction="forward")
fit<-lm(mpg~.wt + cyl + hp,mtcars)
fit<-lm(mpg~wt + cyl + hp,mtcars)
summary(fir)
summary(fit)
plot(fit)
plot(fit)
?filter()
head(mtcars)
rownames(mtcars)
rownames(mtcars) != c("Chrysler Imperial", "Toyota Corona")
filter(mtcars,rownames(mtcars) != c("Chrysler Imperial", "Toyota Corona"))
filter(mtcars,rownames(mtcars) in c("Chrysler Imperial", "Toyota Corona")=False)
filter(mtcars,rownames(mtcars) in c("Chrysler Imperial", "Toyota Corona")=FALSE)
filter(mtcars,rownames(mtcars) %in% c("Chrysler Imperial", "Toyota Corona"))
library(dplyr)
library(stats)
library(dplyr)
test<-c("Chrysler Imperial", "Toyota Corona")
mtcars[16,]
mtcars
filter(mtcars, rownames(mtcars)%in% c("Chrysler Imperial", "Toyota Corona"))
filter(mtcars, rownames(mtcars)%!in% c("Chrysler Imperial", "Toyota Corona"))
filter(mtcars, rownames(mtcars)!%in% c("Chrysler Imperial", "Toyota Corona"))
?mutate
library('sirl')
library('swirl')
swirl()
mydf<-read.csv(path2csv, stringsAsFactors = FALSE)
dim(9)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm('mydf')
?tbl_df
cran
?select
select(cran, ip_id, package,
| country)
select(cran, ip_id, package,country)
5:20
select(cran, r_arch:country)
select(cran, -(r_arch:country))
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran,
| -time)
select(cran,-time)
-5:20
-(5:20)
select(cran,-(X:size)
)
filter(cran, package == "swirl")
q
mtcars
filter(mtcars, rownames(mtcars)!='' | )
mtcars
library(dplyr)
q()
library('dplyr')
rownames(mtcars)
filter(mtcars, (rownames(mtcars)!="Chrysler Imperial" | rownames(mtcars)!="Toyota Corona"))
dim(mtcars)
filter(mtcars, rownames(mtcars)="Chrysler Imperial")
filter(rownames(mtcars), -("Chrysler Imperial"))
rownames(mtcars)
test<-rownames(mtcars)
test[1:4]
test1<-test[1:4]
filter(mtcars, rownames(mtcars) %in% test1 )
?filter
filter(mtcars, rownumber==1 )
filter(mtcars, row_number()==1 )
filter(mtcars, rownames()!="Mazda RX4" )
filter(mtcars, rownames(mtcars)!="Mazda RX4" )
rownames(mtcars#)
rownames(mtcars#)
rownames(mtcars)
fit<-lm(mpg~wt +cyl +hp,mtcars)
plot(fit)
filter(mtcars, rownames(mtcars)!="Chrysler Imperial" & rownames(mtcars)!="Toyota Corona" & rownames(mtcars)!="Fiat 128"  )
modmtcars<-filter(mtcars, rownames(mtcars)!="Chrysler Imperial" & rownames(mtcars)!="Toyota Corona" & rownames(mtcars)!="Fiat 128")
fit<-modmtcars %>% group_by('am')%>% lm(mpg~wt +cyl + qsec)
fit<-modmtcars %>% lm(mpg~wt +cyl + qsec)
lm(mpg~wt +cyl + qsec, modmtcars)
modmtcarsnew<-group_by(am, modmtcars )
modmtcarsnew<-group_by('am', modmtcars )
group_by('am', modmtcars )
?group_by
group_by(modmtcar, 'am' )
modmtcars<-filter(mtcars, rownames(mtcars)!="Chrysler Imperial" & rownames(mtcars)!="Toyota Corona" & rownames(mtcars)!="Fiat 128")
group_by(modmtcar, 'am' )
group_by('am',modmtcar )
library(dplyr)
group_by('am',modmtcar )
modmtcar
modmtcars<-filter(mtcars, rownames(mtcars)!="Chrysler Imperial" & rownames(mtcars)!="Toyota Corona" & rownames(mtcars)!="Fiat 128")
modmtcars
group_by('am',modmtcars )
group_bymodmtcars$am,modmtcar )
group_by(modmtcars$am,modmtcar )
class(modmtcars)
group_by(modmtcars, am )
modmtcarsnew<-group_by(modmtcars, am )
lm(mpg~ wt + cyl+ qsec, modmtcarsnew)
lm(mpg~ wt + cyl+ qsec, modmtcars
)
fit<-lm(mpg~wt +cyl +hp,mtcars)
fit
lm(mpg~wt +cyl +hp,mtcars)
summary(fit)
resid(fit)
mean(resid(fit))
test<-resid(fit)
test[1]
rownames(test)
colnames(test)
class(test)
names(test)
head(mtcars)
mtcars[mtcars$am==0,][]
mtcarsauto<-mtcars[mtcars$am==0,][]
mtcarsmanu<-mtcars[mtcars$am==1,][]
?mtcars
carsauto<-rownames(mtcars[mtcars$am==0,][])
carsmanu<-rownames(mtcars[mtcars$am==1,][])
length(carsauto)
length(carsmanu)
resid(fit)
test[names(test) %in% carsauto,]
test[names(test) %in% carsauto]
meantest[names(test) %in% carsauto]
mean(test[names(test) %in% carsauto])
mean(test[names(test) %in% carsmanu])
test[names(test) %in% carsmanu]
?ttest
?t.test
t.test(1:10, 7:20))
t.test(1:10, 7:20)
t.test(test[names(test) %in% carsmanu], mean(test[names(test) %in% carsauto]))
t.test(test[names(test) %in% carsmanu], test[names(test) %in% carsauto])
library(stats)
library(dplyr)
library(stats)
library(dplyr)
library(dplyr)
fit$fitted.values
fit$effects
fit$fitted.values
fit$df.residual
fit$residuals
fit$rank#
fit$rank
fit$assign
fit$call
fit$assign
fit$model
fit$residuals
summary(fit)$coefficients
summary(fit)
summary(fit)$F-statstic
summary(fit)$F-statistic
summary(fit)$fstatstic
summary(fit)$fstatistic
fit[1]
fit[2]
fit[3]
fit[4]
fit[5]
fit[6]
fit[7]
fit[8]
fit[9]
fit[10]
fit[11]
fit[12]
fit[13]
fit[14]
summary(fit)$rsquared
summary(fit)$r.squared
summary(fit)$coeffiecients
summary(fit)$coefficients
summary(fit)$coefficients[4]
summary(fit)$coefficients[,4]
str(f)
str(fit)
str(summary(fit)
)
summary(fit)
summary(fit)$pvalue
summary(fit)$p.value
str(summary(fit))
summary(fit)$pvalue
summary(fit)$TERMS
summary(fit)$terms
summary(fit)$fstatistic
str(summary(fit))
summary(fit)
summary(fit).p.value
summary(fit).pvalue
summary(fit)$fstatistic
summary(fit)$fstatistic[4]
summary(fit)$fstatistic[3]
summary(fit)$p-vallue
summary(fit)$p-value
summary(fit)$pvalue
summary(fit)$p.value
summary(fit)$P.value
str(summary(fit))
summary(fit)$cov.unscaled
carsmanu<-rownames(mtcars[mtcars$am==1,][])
carsauto<-rownames(mtcars[mtcars$am==0,][])
fitnew<-lm(mpg~wt +cyl +hp +am ,modmtcars)
carsmanu<-rownames(mtcars[mtcars$am==1,][])
carsauto<-rownames(mtcars[mtcars$am==0,][])
rescars<-resid(fitnew)
t.test(rescars[names(rescars) %in% carsmanu], rescars[names(rescars) %in% carsauto]))
t.test(rescars[names(rescars) %in% carsmanu], rescars[names(rescars) %in% carsauto])
rescars[names(rescars) %in% carsmanu]
fitnew<-lm(mpg~wt +cyl +hp +am ,modmtcars)
carsmanu<-rownames(mtcars[mtcars$am==1,][])
carsauto<-rownames(mtcars[mtcars$am==0,][])
rescars<-resid(fitnew)
rescars
modmtcars<-filter(mtcars, rownames(mtcars)!="Chrysler Imperial" &
rownames(mtcars)!="Toyota Corona" &
rownames(mtcars)!="Fiat 128")
modmtcras
modmtcars
?filter
?which
test<-c(Chrysler Imperial","Toyota Corona" , "Fiat 128")
test<-c('Chrysler Imperial","Toyota Corona" , "Fiat 128")
''
test<-c('Chrysler Imperial','Toyota Corona' , 'Fiat 128')
modmtcars<-which(rownames(mtcars)!=test)
modmtcars<-which(rownames(mtcars)!='Toyota Corona')
modmtcars
length(modmtcars)
rownames(mtcars)
rowstothrow<-which(rownames(mtcars) %in% test)
rowstothrow
modmtcars<-mtcars[rowstothrow,]
modmtcars
rowstothrow<-which(rownames(mtcars) %nin% test)
modmtcars<-mtcars[-rowstothrow,]
modmtcars
dim(modmtcars)
fitnew<-lm(mpg~wt +cyl +hp +am ,modmtcars)
carsmanu<-rownames(mtcars[mtcars$am==1,][])
carsauto<-rownames(mtcars[mtcars$am==0,][])
rescars<-resid(fitnew)
t.test(rescars[names(rescars) %in% carsmanu], rescars[names(rescars) %in% carsauto])
fit<-lm(mpg~wt +cyl +hp +am ,mtcars)
carsmanu<-rownames(mtcars[mtcars$am==1,][])
carsauto<-rownames(mtcars[mtcars$am==0,][])
rescars<-resid(fit)
t.test(rescars[names(rescars) %in% carsmanu], rescars[names(rescars) %in% carsauto])
rescars
mean(rescars[names(rescars) %in% carsmanu])
mean(rescars[names(rescars) %in% carsauto])
install.package(caret)
install.packages(caret)
install.packages('caret')
data(mtcars)
fit<-lm(mpg~factor(cyl)+wt, data=mtcars)
fit
fit1<-lm(mpg~factor(cyl), data=mtcars)
fit1
swirl()
library(swirl)
swirl()
"plot(child ~
| parent, galton)
"plot(child ~
| parent, galton)
"plot(child ~ parent, galton)
"plot(child ~ parent, galton)
plot(child ~ parent, galton)
plot(jitter(child,4) ~ parent,galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd=3, col='red')
summary(regrline)
fit <- lm(child ~ parent, galton)
summary(fir)
summary(fit)
fit$residuals
mean(fit$residuals)
cov(fit$residuals, galton$parent)
ols.ic<-fit$coef
ols.ic<-fit$coef[1]
ols.slope<-fit$coef[2]
rhs-lhs
lhs-rhs
all.equal(lhs, rhs)
varChild<-var(child)
varChild<-var(gallon$child)
?
head(gallon)
head(galton)
varChild<- var(galton$child)
varRes- var(fit$residuals)
varRes <- var(fit$residuals)
varEst<-var(est(ols.slope, ols.ic))
all.equal(varChild, varEst)
all.equal(varChild, varRes+varEst)
efit <- lm(accel ~ mag+dist, attenu)
mean( efit$residuals)
cov( efit$residuals, attenu$mag)
cov( efit$residuals, attenu$dist)
cor(gpa_nor,gch_nor)
l_nor<-lm(gch_nor~gpa_nor, galton)
l_nor<-lm(gch_nor~gpa_nor)
fit<-lm(child ~ parent, galton)
sqrt(fit$residuals/(926))
sqrt(fit$residuals^2/(n-2))
sqrt(sum(fit$residuals^2)/(n-2))
summary(fit)$sigma
deviance(fit)/(n-2)
sqrt(deviance(fit)/(n-2))
mu<-mean(galton$child)
sTot<-sum((galton$child-mu)^2)
deviance(fit)
sRes<-deviance(fit)
1-sRes/sTot
summary(fit)$r
summary(fit)$r.squared
cor(galton$child, galton$parent)
cor(galton$child, galton$parent)^2
ones <- rep(1, nrow(galton))
lm(child ~ ones + parent -1, galton)
lm(child ~ parent, galton)
lm(child ~ 1, galton)
head(trees)
fit <- lm(Volume ~ Girth + Height + Constant -1, trees)
trees2<-eliminate("Girth", trees)
head(trees2)
fit2 <- lm(Volume ~ Height + Constant -1, trees2)
lapply(list(fit, fit2), coef)
library(MASS)
?shuttle
head(shuttle)
test<-lm(factor(use) ~ factor(wind) )
test<-lm( factor(use) ~ factor(wind), data=shuttle )
test<-lm( use ~ wind, data=shuttle )
shuttle$use <- factor(shuttle$use, levels = c("auto", "noauto"), labels = c(1, 0))
head(shuttle)
fit1 <- glm(use ~ wind - 1, data = shuttle, family = "binomial")
summary(fit)
summary(fit1)
windhead <- fit1$coef[1]
windtail <- fit1$coef[2]
exp(windtail)/exp(windhead)
fit1 <- glm(use ~ wind + magn - 1, data = shuttle, family = "binomial")
summary(fit1)
windhead <- fit1$coef[1]
windtail <- fit1$coef[2]
exp(windtail)/exp(windhead)
?glm
fit2 <- glm(1 - use ~ wind + magn - 1, data = shuttle, family = binomial)
fit2 <- glm(1 - use ~ wind + magn - 1, data = shuttle, family = 'binomial')
fit2 <- glm(use ~ wind + magn, data = shuttle, family = binomial)
?loess
setwd('Machine_Learning/writeup/Training/')
ls
dir()
train<-read.csv('pml-training.csv')
dim(train)
colnames(train)
unique(train$XX)
unique(train$X)
colnames(train)
unique(train$classe)
hist(train$classe)
hist(factor(train$classe)
)
level(train$classe)
number(train$classe)
count(train$classe=='A')
table(train$classe)
head(train)
count(train$stddev_yaw_forearm)
table(train$stddev_yaw_forearm)
unique(train$stddev_yaw_forearm)
